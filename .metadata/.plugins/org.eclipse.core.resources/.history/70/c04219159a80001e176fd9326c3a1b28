import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextArea;

public class ClientLobby extends JFrame {
	private BufferedReader in;
	private BufferedWriter out;
	private Socket socket;
	
	private ImageIcon bg = new ImageIcon("./LobbyImages/LobbyBackground.png"); //배경화면
	private ImageIcon chatPanel = new ImageIcon("./LobbyImages/chatingPanel.png"); // 대화창 패널
	private ImageIcon room = new ImageIcon("./LobbyImages/emptyRoom.png"); //방
	private ImageIcon chatBox = new ImageIcon("./LobbyImages/chatBox.png"); // 대화창 내부
	private ImageIcon roomList = new ImageIcon("./LobbyImages/roomList.png"); // 방 리스트 패널
	private int width = bg.getIconWidth();
	private int height = bg.getIconHeight()+30;
	private JTextArea textArea;
	//private ServerReceiver serverListener;
	
	public ClientLobby(String username, String ip_addr) {
		setTitle("크레이지아케이드 - 대기실");
		setLocation(0,0);
		setSize(width,height);
		setLayout(null);
		setVisible(true);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		// 배경
		JLabel backgroundLabel = new JLabel(bg);
		backgroundLabel.setSize(width,height);
		backgroundLabel.setLocation(0,0);
		add(backgroundLabel);
		
		// 방 리스트 패널
		JLabel roomListLabel = new JLabel(roomList);
		roomListLabel.setSize(roomList.getIconWidth(),roomList.getIconHeight());
		roomListLabel.setLocation(30,30);
		backgroundLabel.add(roomListLabel);
		
		// 방 생성
		for(int i=0;i<6;i++) {
			JLabel emptyRoom = new JLabel(room);
			emptyRoom.setSize(room.getIconWidth(),room.getIconHeight());
			emptyRoom.setLocation(20+room.getIconWidth()*(i%2),40+room.getIconHeight()*(i/2));
			roomListLabel.add(emptyRoom);
		}
		
		// 대화창 패널
		JLabel chatPanelLabel = new JLabel(chatPanel);
		chatPanelLabel.setSize(chatPanel.getIconWidth(),chatPanel.getIconHeight());
		chatPanelLabel.setLocation(30,420);
		backgroundLabel.add(chatPanelLabel);
		
		// 대화창 내부 라벨
		JLabel chatBoxLabel = new JLabel(chatBox);
		chatBoxLabel.setSize(chatBox.getIconWidth(),chatBox.getIconHeight());
		chatBoxLabel.setLocation(30,40);
		chatPanelLabel.add(chatBoxLabel);
		
		// 대화창 내부 라벨 속 텍스트필드
		textArea = new JTextArea();
		textArea.setLocation(0,0);
		textArea.setSize(chatBox.getIconWidth(),chatBox.getIconHeight());
		textArea.setEditable(false);
		chatBoxLabel.add(textArea);
		
		try {
			socket = new Socket("localhost", 9999); // 클라이언트 소켓 생성
			// 클라이언트로부터의 입출력 스트림
			in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())); // 클라이언트로의 출력 스트림
		} catch (IOException e) {
			System.out.println("서버 접속 실패 : 서버가 켜져있는지 다시 확인해 주세요!");
			setVisible(false);
		} 
		
		//시작버튼
		JButton msgSendButton = new JButton(room);
		msgSendButton.setSize(3000,3000);
		msgSendButton.setLocation(bg.getIconWidth()+30,bg.getIconHeight());
		add(msgSendButton);
		msgSendButton.addActionListener(new ActionListener(){ // 액션 이벤트 처리
			public void actionPerformed(ActionEvent e) {
				System.out.println("전송됨");
				sendMsgToServer("1/ㅋㅋ");
			}
		});
		
//		serverListener = new ServerReceiver();
//		serverListener.start();
		
		repaint();
	}
	
	private void sendMsgToServer(String msg) {
		try { // 문자열 전송
			System.out.println(msg);
			out.write("1/"+msg);
			out.flush();
		} catch (IOException e) {
			e.printStackTrace();
		} 
		
	}
	
	
	void AppendText(String s) {
		textArea.append(s + "\n");
		textArea.setCaretPosition(textArea.getText().length());
	}
	
//	// 서버로부터 메세지를 받아옴
//	public class ServerReceiver extends Thread {
//		@Override
//		public void run() {
//			String msg = null;
//			while (true) {
//				try {
//					msg = in.readLine();
//				} catch (Exception e) {
//					AppendText("에러");
//				}
//				AppendText(msg);
//				repaint();
//			}
//		}
//	}
	
	
}
